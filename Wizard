/*
 * Wizard Class
 * Attributes:
 * -name: String
 * -health: int
 * -key: int
 * -locked: boolean
 */

public class Wizard implements Lockable {
	
	private String name;
	private int health;
	private int key;
	boolean locked;
	
	/**
	 * End constructor to put object into consistent state
	 */
	public Wizard() {
	
	}//end constructor
	

	public Wizard(String name, int health, int key, boolean locked) {
		
		this.name = "";
		this.health = 100;
		this.key = 0;
		this.locked = false;
		
	}//end preferred constructor
	
	
	public void takeDamage(int power) {
		if (locked= false)
			health = (health-power);
		else
			health = health;
	}//end takeDamage
	
	//getters and setters
	public String getName() {
		return name;
	}//end getName
	
	public void setName(String name) {
		this.setName(name);
	}//end setName
	
	public int getHealth() {
		return health;
	}//end getHealth

	public void setHealth(int health) {
		this.health = health;
	}//end setHealth
	
	public int getKey() {
		return key;
	}//end getKey

	public void setLocked(boolean locked) {
		this.locked = locked;
	}//end setLocked
//end getters/setters
	
	@Override
	public  int setKey(int key) {//this tells me to use "return key" but I'm unsure
		if (key>0 && key <= 0) 
		return this.key;
		
		else 
			key = 0;
			return key;
		}//end setKey
	
	public boolean isLocked() {
		return isLocked();
	}//end isLocked
	
	@Override
	public int lock(int key) {
		if (this.key == key)
		return locked=true;
		else 
			locked=false;
	}
	
	@Override
	public int unlock(int key) {
		if (this.key == key)
			return locked=false;
		else
		return this.unlock(key);
	}
	
	@Override
	public String toString() {
		return "Wizard [name=" + name + ", health=" + health + ", key=" + key + ", locked=" + locked + "]";
	}//end toString
	
}//end class
