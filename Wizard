/*
 * Wizard Class
 * Attributes:
 * -name: String
 * -health: int
 * -key: int
 * -locked: boolean
 */

public class Wizard implements Lockable {
	
	private String name;
	private int health;
	private int key;
	boolean locked;
	
	public Wizard() {
	
	}//end empty-argument constructor


	public Wizard(String name) {
		
		this.setName(name);
		this.setHealth(100);
		this.key = 0;
		this.locked = false;

	}//end preferred constructor
	
	
	public void takeDamage(int power) {
		if (!this.isLocked()){
			this.health -= power;
		}//end if 
		else {
			System.out.println(this.name + " is Locked.");
			
		}//end else
	}//end takeDamage
	
	//begin getters and setters
	
	public String getName() {
		return name;
	}//end getName
	
	public void setName(String name) {
		this.name = name;
	}//end setName
	
	public int getHealth() {
		return health;
	}//end getHealth

	public void setHealth(int health) {
		this.health = health;
	}//end setHealth
	
	public int getKey() {
		return key;
	}//end getKey

	public void setLocked(boolean locked) {
		this.locked = locked;
	}//end setLocked
	
//end getters/setters
	
	@Override
	public  int setKey(int key) {//this tells me to use "return key" 
		if (key>0 && key <= 0) 
		return this.key;
		
		else 
			key = 0;
			return key;
		}//end setKey
	
	public boolean isLocked() {
		return locked;
		
	}//end isLocked
	
	@Override
	public int lock(int key) {
	    if (this.key == key) {
	        locked = true;
	        return 1; // Indicating the lock was successful
	    } else {
	        locked = false;
	        return 0; // Indicating the lock failed
	    }
	}//end lock
	
	@Override
	public int unlock(int key) {
		if (this.key == key) {
			locked = false;
			return 1;
		} else {
			 locked=false;
			 return 0;
		}
	}//end unlock
	
	@Override
	public String toString() {
		return "Wizard [name=" + name + ", health=" + health + ", key=" + key + ", locked=" + locked + "]";
	}//end toString
	
}//end class
